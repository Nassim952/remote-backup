
CREATE OR REPLACE TABLE IDENTITY(

id INT NOT NULL AUTO_INCREMENT,
nom VARCHAR(100),
firtname VARCHAR(100),
date_naissance DATE,
pays VARCHAR(255),

)

CREATE OR REPLACE TABLE USER(
    id INT NOT NULL AUTO_INCREMENT,
    username VARCHAR(100),
    email VARCHAR(255),
    pwd VARCHAR(255);
    statut INT;
    right VARCHAR(255);
    identity_id INT,
    FOREIGN KEY identity_id REFERENCES IDENTITY(id) ON DELETE CASCADE
)

CREATE OR REPLACE TABLE PAGE(
    id INT NOT NULL AUTO_INCREMENT,
    nom VARCHAR(100),
    gabarit INT,
    creation_date TIMESTAMP,
)

CREATE OR REPLACE TABLE COMPONNENT(
    id INT NOT NULL AUTO_INCREMENT,
    title VARCHAR(255),
    class VARCHAR(255),
    type_Componnent INT, 
    color INT,
 )
 
CREATE OR REPLACE TABLE POST(
    id INT NOT NULL AUTO_INCREMENT,
    id_page INT,
    user_id INT,
    FOREIGN KEY id_page REFERENCES PAGE(id) ON DELETE CASCADE,
    FOREIGN KEY user_id REFERENCES USER(id) ON DELETE CASCADE
)


CREATE OR REPLACE TABLE IMAGE(
    id INT NOT NULL AUTO_INCREMENT,
    title VARCHAR(255),
    REFERENCE int (500),
    uploading_date TIMESTAMP,
 )

 CREATE OR REPLACE TABLE ARTICLE(
    id INT NOT NULL AUTO_INCREMENT,
    title VARCHAR(255),
    subtiltle VARCHAR(255),
    creation_date TIMESTAMP,
    identity_id INT,
    image_id INT,
    FOREIGN KEY user_id REFERENCES USER(id) ON DELETE CASCADE
    FOREIGN KEY image_id REFERENCES IMAGE(id) ON DELETE CASCADE
)

CREATE OR REPLACE TABLE COMMENT(
    id INT NOT NULL AUTO_INCREMENT,
    comment TEXT,
    posting_date TIMESTAMP,
    user_id INT,
    id_article INT,
    FOREIGN KEY user_id REFERENCES USER(id) ON DELETE CASCADE
    FOREIGN KEY id_article REFERENCES ARTICLE(id) ON DELETE CASCADE
)

 CREATE OR REPLACE TABLE COMPONNENT_PAGE(
    id INT NOT NULL AUTO_INCREMENT,
    title VARCHAR(255),
    position INT,
    page_id INT,
    componnent_id INT,
    FOREIGN KEY page_id REFERENCES PAGE(id) ON DELETE CASCADE,
    FOREIGN KEY componnent_id REFERENCES COMPONNENT(id) ON DELETE CASCADE
 )